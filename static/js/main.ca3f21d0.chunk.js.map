{"version":3,"sources":["variables/calendarVars.jsx","components/Calendar/Calendar.jsx","components/Header/Header.jsx","images/TVimage.png","components/Content/Content.jsx","api/helpers.jsx","api/movies.jsx","images/arrowDown.svg","components/MoviesList/Button/Button.jsx","components/MoviesList/Movie/Movie.jsx","components/MoviesList/MoviesList.jsx","variables/monthsVars.jsx","App.jsx","index.js"],"names":["calendarVars","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","getMonthData","year","month","result","date","Date","daysInMonth","getMonth","getFullYear","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","Calendar","onChange","useState","setDate","months","calendar","today","String","slice","monthData","className","type","onClick","map","week","currentDate","handleDay","getDate","uuidv4","Header","Content","src","TVimage","alt","request","url","options","a","fetch","response","Error","status","statusText","json","getMovies","movies","Button","setIsClicked","quantity","arrowDown","Movie","image","name","season","episode","MoviesList","headerDate","setMovies","isClicked","setQuantity","useEffect","then","movie","length","show","medium","premiered","number","id","monthsVars","1","2","3","4","5","6","7","8","9","10","11","12","App","dateToLoad","setDateToLoad","setHeaderDate","startsWith","newDate","ReactDOM","render","document","getElementById"],"mappings":"iUAEaA,EACH,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAMEC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE7DC,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3CC,EAEM,EAmCL,SAASC,EAAaC,EAAMC,GAOjC,IANA,IAAMC,EAAS,GACTC,EAAO,IAAIC,KAAKJ,EAAMC,GACtBI,EArBD,SAAwBF,GAC7B,IAAMF,EAAQE,EAAKG,WACbN,EAAOG,EAAKI,cACZF,EAAcT,EAAcK,GAElC,OATK,SAAoBD,GACzB,QAAUA,EAAO,KAASA,EAAO,MAASA,EAAO,KAQ7CQ,CAAWR,IAASC,IAAUH,EACzBO,EAAc,EAGhBA,EAYaI,CAAeN,GAC7BO,EAVD,SAAsBP,GAC3B,IAAMQ,EAAYR,EAAKS,SAEvB,OAAOf,EAAsBc,GAOPE,CAAaV,GAC/BW,EAAM,EAEDC,EAAI,EAAGA,GAAKV,EAAcK,GAlDhB,EAkD+CK,IAAK,CACrEb,EAAOa,GAAK,GAEZ,IAAK,IAAIC,EAAI,EAAGA,EArDC,EAqDiBA,IAE9Bd,EAAOa,GAAGC,GADD,IAAND,GAAWC,EAAIN,GAAkBI,EAAMT,OAC3BY,EAEA,IAAIb,KAAKJ,EAAMC,EAAOa,KAK3C,OAAOZ,E,UCzEIgB,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAChBC,mBAAS,IAAIhB,MADG,mBACjCD,EADiC,KAC3BkB,EAD2B,KAGhCC,EAAWC,EACbvB,EAAOG,EAAKI,cACZN,EAAQE,EAAKG,WACbkB,EAAQC,OAAO,IAAIrB,MAAQsB,MAAM,EAAG,IAcpCC,EAAYJ,EAAsBpB,EAAKI,cAAeJ,EAAKG,YAEjE,OACE,sBAAKsB,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,wBACEA,UAAU,mBACVC,KAAK,SACLC,QApBgB,WACtBT,EAAQ,IAAIjB,KAAKJ,EAAMC,EAAQ,KAgB3B,SAKG,MAGH,sBAAM2B,UAAU,kBAAhB,mBACMN,EAAOnB,EAAKG,eAGlB,wBACEsB,UAAU,mBACVC,KAAK,SACLC,QA5BgB,WACtBT,EAAQ,IAAIjB,KAAKJ,EAAMC,EAAQ,KAwB3B,SAKG,SAIL,uBAAO2B,UAAU,kBAAjB,SACE,gCACGD,EAAUI,KAAI,SAAAC,GAAI,OACjB,oBAAmBJ,UAAU,gBAA7B,SACGI,EAAKD,KAAI,SAAAE,GAAW,OAAKA,EAEtB,oBAEEL,UAAWJ,IAAUC,OAAOQ,GAAaP,MAAM,EAAG,IAC9C,wCACA,gBAEJI,QAAS,kBA1CT,SAACG,GACjBd,EAASc,GAyCsBC,CAAUD,IAN3B,SAQGA,EAAYE,WAPRC,eAUP,oBAAmBR,UAAU,iBAApBQ,mBAdNA,0BCrDRC,G,MAAS,SAAC,GAAD,IAAGlC,EAAH,EAAGA,KAAMkB,EAAT,EAASA,QAAT,OACpB,yBAAQO,UAAU,SAAlB,uBAGY,OAATzB,GACC,wBACEyB,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAMT,EAAQ,cCZhB,MAA0B,oCCI5BiB,G,MAAU,kBACrB,0BAASV,UAAU,UAAnB,UACE,qBACEA,UAAU,eACVW,IAAKC,EACLC,IAAI,OAEN,mBAAGb,UAAU,gBAAb,qa,uBCTSc,EAAO,uCAAG,WAAMC,EAAKC,GAAX,iBAAAC,EAAA,sEACEC,MAAM,GAAD,OAHb,mCAGa,OAAeH,GAAOC,GAD7B,UACfG,EADe,6BAIb,IAAIC,MAAJ,UAAaD,EAASE,OAAtB,cAAkCF,EAASG,aAJ9B,uBAOAH,EAASI,OAPT,cAOfjD,EAPe,yBASdA,GATc,2CAAH,wDCAPkD,EAAS,uCAAG,WAAMjD,GAAN,eAAA0C,EAAA,sEACFH,EAAQ,oBAAD,OAAqBvC,IAD1B,cACjBkD,EADiB,yBAGhBA,GAHgB,2CAAH,sDCFP,MAA0B,sCCK5BC,G,MAAS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAKrC,OACE,yBACE5B,UAAU,iBACVC,KAAK,SACLC,QARgB,WAClByB,GAAa,IAIb,yBAKWC,EAAW,EALtB,SAME,qBACE5B,UAAU,gBACVW,IAAKkB,EACLhB,IAAI,eChBCiB,G,MAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAM5D,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,QAA9B,OACnB,qBAAIlC,UAAU,eAAd,UACE,qBACEA,UAAU,gBACVW,IAAKoB,EACLlB,IAAI,UAEN,sBAAKb,UAAU,sBAAf,UACE,mBAAGA,UAAU,gBAAb,SACGgC,IAEH,mBAAGhC,UAAU,eAAb,SACG5B,EAAK0B,MAAM,EAAG,KAEjB,sBAAKE,UAAU,eAAf,UACE,qBAAKA,UAAU,iBAAf,2BACciC,KAEd,qBAAKjC,UAAU,kBAAf,4BACekC,gBCfVC,G,MAAa,SAAC,GAAmC,IAAjC5D,EAAgC,EAAhCA,KAAM6D,EAA0B,EAA1BA,WAAY3C,EAAc,EAAdA,QAAc,EAC/BD,mBAAS,IADsB,mBACpDiC,EADoD,KAC5CY,EAD4C,OAEzB7C,oBAAS,GAFgB,mBAEpD8C,EAFoD,KAEzCX,EAFyC,OAG3BnC,mBAAS,MAHkB,mBAGpDoC,EAHoD,KAG1CW,EAH0C,KAoB3D,OAfAC,qBAAU,WACRhB,EAAUjD,GACPkE,MAAK,SAACC,GACgB,MAAjBA,EAAMrB,QACRgB,EAAU,IACVE,EAAY,OACFD,EAIVD,EAAUK,IAHVL,EAAUK,EAAM5C,MAAM,EAAG,IACzByC,EAAYG,EAAMC,cAKvB,CAACpE,EAAM+D,IAGR,qCACE,cAAC,EAAD,CAAQ7C,QAASA,IACjB,0BAASO,UAAU,SAAnB,UACE,qBAAKA,UAAU,eAAf,SACGoC,IAEH,sBAAKpC,UAAU,oBAAf,UACqB,IAAlByB,EAAOkB,QACN,kDAIDlB,GACC,oBAAIzB,UAAU,eAAd,SACGyB,EAAOtB,KAAI,SAAAuC,GAAK,OACfA,EAAME,KAAKb,OACT,cAAC,EAAD,CAEEA,MAAOW,EAAME,KAAKb,MAAMc,OACxBb,KAAMU,EAAME,KAAKZ,KACjB5D,KAAMsE,EAAME,KAAKE,UACjBb,OAAQS,EAAMT,OACdC,QAASQ,EAAMK,QALVL,EAAMM,aAYrBV,GAAaV,EAAW,GACxB,cAAC,EAAD,CAAQD,aAAcA,EAAcC,SAAUA,YC3D3CqB,EAAa,CACxBC,EAAG,UACHC,EAAG,WACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,YACHC,GAAI,UACJC,GAAI,WACJC,GAAI,YCJOC,G,MAAM,WAAO,IAAD,EACCtE,mBAAS,MADV,mBAChBjB,EADgB,KACVkB,EADU,OAEaD,mBAAS,MAFtB,mBAEhBuE,EAFgB,KAEJC,EAFI,OAGaxE,mBAAS,IAHtB,mBAGhB4C,EAHgB,KAGJ6B,EAHI,KAoBvB,OAbAzB,qBAAU,WACR,GAAIjE,EAAM,CACR,IAAMH,EAAOyB,OAAOtB,GAAMuB,MAAM,GAAI,IAC9BzB,EAAQE,EAAKG,WAAa,EAC1BQ,EAAMW,OAAOtB,GAAMuB,MAAM,EAAG,IAElCkE,EAAc,GAAD,OAAI5F,EAAJ,YAAYC,EAAZ,YAAqBa,IAClC+E,EAAc,GAAD,OAAI/E,EAAIgF,WAAW,GAC5BhF,EAAIY,MAAM,GACVZ,EAFS,YAEF+D,EAAW5E,GAFT,YAEmBD,EAAK0B,MAAM,QAE5C,CAACvB,IAGF,sBAAKyB,UAAU,YAAf,WACIzB,GACA,qCACE,cAAC,EAAD,CAAQA,KAAMA,IACd,cAAC,EAAD,IACA,cAAC,EAAD,CAAUgB,SArBO,SAAA4E,GAAO,OAAI1E,EAAQ0E,SAyBvCJ,GAAcxF,GACb,mCACE,cAAC,EAAD,CACEA,KAAMwF,EACN3B,WAAYA,EACZ3C,QAASA,W,MCtCrB2E,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca3f21d0.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\n/* eslint-disable max-len */\nexport const calendarVars = {\n  months: [\n    'Январь',\n    'Февраль',\n    'Март',\n    'Апрель',\n    'Май',\n    'Июнь',\n    'Июль',\n    'Август',\n    'Сентябрь',\n    'Октябрь',\n    'Ноябрь',\n    'Декабрь',\n  ],\n};\n\nconst DAYS_IN_WEEK = 7;\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst WEEK_DAYS_FROM_MONDAY = [6, 0, 1, 2, 3, 4, 5];\n\nconst Month = {\n  January: 0,\n  February: 1,\n  March: 2,\n  April: 3,\n  May: 4,\n  June: 5,\n  July: 6,\n  August: 7,\n  September: 8,\n  October: 9,\n  Novermber: 10,\n  December: 11,\n};\n\nexport function isLeapYear(year) {\n  return !((year % 4) || (!(year % 100) && (year % 400)));\n}\n\nexport function getDaysInMonth(date) {\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const daysInMonth = DAYS_IN_MONTH[month];\n\n  if (isLeapYear(year) && month === Month.February) {\n    return daysInMonth + 1;\n  }\n\n  return daysInMonth;\n}\n\nexport function getDayOfWeek(date) {\n  const dayOfWeek = date.getDay();\n\n  return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\n}\n\nexport function getMonthData(year, month) {\n  const result = [];\n  const date = new Date(year, month);\n  const daysInMonth = getDaysInMonth(date);\n  const monthStartsOn = getDayOfWeek(date);\n  let day = 1;\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined;\n      } else {\n        result[i][j] = new Date(year, month, day++);\n      }\n    }\n  }\n\n  return result;\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as calendar from '../../variables/calendarVars';\nimport './Calendar.scss';\n\nexport const Calendar = ({ onChange }) => {\n  const [date, setDate] = useState(new Date());\n\n  const { months } = calendar.calendarVars;\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const today = String(new Date()).slice(0, 15);\n\n  const handlePrevMonth = () => {\n    setDate(new Date(year, month - 1));\n  };\n\n  const handleNextMonth = () => {\n    setDate(new Date(year, month + 1));\n  };\n\n  const handleDay = (currentDate) => {\n    onChange(currentDate);\n  };\n\n  const monthData = calendar.getMonthData(date.getFullYear(), date.getMonth());\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar__header\">\n        <button\n          className=\"calendar__button\"\n          type=\"button\"\n          onClick={handlePrevMonth}\n        >\n          {'<'}\n        </button>\n\n        <span className=\"calendar__month\">\n          {`${months[date.getMonth()]}`}\n        </span>\n\n        <button\n          className=\"calendar__button\"\n          type=\"button\"\n          onClick={handleNextMonth}\n        >\n          {'>'}\n        </button>\n      </div>\n\n      <table className=\"calendar__table\">\n        <tbody>\n          {monthData.map(week => (\n            <tr key={uuidv4()} className=\"calendar__row\">\n              {week.map(currentDate => (currentDate\n                ? (\n                  <td\n                    key={uuidv4()}\n                    className={today === String(currentDate).slice(0, 15)\n                      ? 'calendar__day calendar__day--selected'\n                      : 'calendar__day'\n                    }\n                    onClick={() => handleDay(currentDate)}\n                  >\n                    {currentDate.getDate()}\n                  </td>\n                )\n                : <td key={uuidv4()} className=\"calendar__day\" />))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nCalendar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Header.scss';\n\nexport const Header = ({ date, setDate }) => (\n  <header className=\"header\">\n    Super Film\n\n    {date !== null && (\n      <button\n        className=\"header__button\"\n        type=\"button\"\n        onClick={() => setDate(null)}\n      />\n    )}\n  </header>\n);\n","export default __webpack_public_path__ + \"static/media/TVimage.08120a3d.png\";","import React from 'react';\nimport TVimage from '../../images/TVimage.png';\nimport './Content.scss';\n\nexport const Content = () => (\n  <section className=\"content\">\n    <img\n      className=\"content__img\"\n      src={TVimage}\n      alt=\"tv\"\n    />\n    <p className=\"content__text\">\n      Для получения списка сериалов,\n      пожалуйста, выберите\n      необходимый месяц и день.\n    </p>\n  </section>\n);\n","const BASE_URL = 'https://api.tvmaze.com/schedule';\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n","import { request } from './helpers';\n\nexport const getMovies = async(date) => {\n  const movies = await request(`?country=US&date=${date}`);\n\n  return movies;\n};\n","export default __webpack_public_path__ + \"static/media/arrowDown.ce6cdfc6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport arrowDown from '../../../images/arrowDown.svg';\nimport './Button.scss';\n\nexport const Button = ({ setIsClicked, quantity }) => {\n  const handleClick = () => {\n    setIsClicked(true);\n  };\n\n  return (\n    <button\n      className=\"movies__button\"\n      type=\"button\"\n      onClick={handleClick}\n    >\n      {`Show ${quantity - 3} More`}\n      <img\n        className=\"movies__arrow\"\n        src={arrowDown}\n        alt=\"arrow\"\n      />\n    </button>\n  );\n};\n\nButton.propTypes = {\n  setIsClicked: PropTypes.func.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.scss';\n\nexport const Movie = ({ image, name, year, season, episode }) => (\n  <li className=\"movies__item\">\n    <img\n      className=\"movies__image\"\n      src={image}\n      alt=\"movie\"\n    />\n    <div className=\"movies__description\">\n      <p className=\"movies__title\">\n        {name}\n      </p>\n      <p className=\"movies__year\">\n        {year.slice(0, 4)}\n      </p>\n      <div className=\"movies__info\">\n        <div className=\"movies__season\">\n          {`Season: ${season}`}\n        </div>\n        <div className=\"movies__episode\">\n          {`Episode: ${episode}`}\n        </div>\n      </div>\n    </div>\n  </li>\n);\n\nMovie.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  season: PropTypes.number.isRequired,\n  episode: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovies } from '../../api/movies';\nimport { Header } from '../Header';\nimport { Button } from './Button';\nimport { Movie } from './Movie';\nimport './MoviesList.scss';\n\nexport const MoviesList = ({ date, headerDate, setDate }) => {\n  const [movies, setMovies] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [quantity, setQuantity] = useState(null);\n\n  useEffect(() => {\n    getMovies(date)\n      .then((movie) => {\n        if (movie.status === 422) {\n          setMovies([]);\n          setQuantity(null);\n        } else if (!isClicked) {\n          setMovies(movie.slice(0, 3));\n          setQuantity(movie.length);\n        } else {\n          setMovies(movie);\n        }\n      });\n  }, [date, isClicked]);\n\n  return (\n    <>\n      <Header setDate={setDate} />\n      <section className=\"movies\">\n        <div className=\"movies__date\">\n          {headerDate}\n        </div>\n        <div className=\"movies__container\">\n          {movies.length === 0 && (\n            <p>\n              No Data Available\n            </p>\n          )}\n          {movies && (\n            <ul className=\"movies__list\">\n              {movies.map(movie => (\n                movie.show.image && (\n                  <Movie\n                    key={movie.id}\n                    image={movie.show.image.medium}\n                    name={movie.show.name}\n                    year={movie.show.premiered}\n                    season={movie.season}\n                    episode={movie.number}\n                  />\n                )\n              ))}\n            </ul>\n          )}\n        </div>\n        {!isClicked && quantity > 3 && (\n          <Button setIsClicked={setIsClicked} quantity={quantity} />\n        )}\n      </section>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  date: PropTypes.string.isRequired,\n  headerDate: PropTypes.string.isRequired,\n  setDate: PropTypes.func.isRequired,\n};\n","export const monthsVars = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n","import React, { useEffect, useState } from 'react';\nimport { Calendar } from './components/Calendar';\nimport { Header } from './components/Header';\nimport { Content } from './components/Content';\nimport { MoviesList } from './components/MoviesList';\nimport { monthsVars } from './variables/monthsVars';\nimport './App.scss';\n\nexport const App = () => {\n  const [date, setDate] = useState(null);\n  const [dateToLoad, setDateToLoad] = useState(null);\n  const [headerDate, setHeaderDate] = useState('');\n\n  const handleDateChange = newDate => setDate(newDate);\n\n  useEffect(() => {\n    if (date) {\n      const year = String(date).slice(11, 15);\n      const month = date.getMonth() + 1;\n      const day = String(date).slice(8, 10);\n\n      setDateToLoad(`${year}-${month}-${day}`);\n      setHeaderDate(`${day.startsWith(0)\n        ? day.slice(1)\n        : day} ${monthsVars[month]} ${year.slice(2)}`);\n    }\n  }, [date]);\n\n  return (\n    <div className=\"container\">\n      {!date && (\n        <>\n          <Header date={date} />\n          <Content />\n          <Calendar onChange={handleDateChange} />\n        </>\n      )}\n\n      {dateToLoad && date && (\n        <>\n          <MoviesList\n            date={dateToLoad}\n            headerDate={headerDate}\n            setDate={setDate}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}